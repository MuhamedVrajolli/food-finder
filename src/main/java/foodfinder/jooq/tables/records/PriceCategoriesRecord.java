/*
 * This file is generated by jOOQ.
 */
package foodfinder.jooq.tables.records;


import foodfinder.jooq.tables.PriceCategories;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PriceCategoriesRecord extends UpdatableRecordImpl<PriceCategoriesRecord> implements Record4<Long, String, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 79465015;

    /**
     * Setter for <code>public.price_categories.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.price_categories.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.price_categories.category</code>.
     */
    public void setCategory(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.price_categories.category</code>.
     */
    public String getCategory() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.price_categories.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.price_categories.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.price_categories.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.price_categories.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDateTime, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, LocalDateTime, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PriceCategories.PRICE_CATEGORIES.ID;
    }

    @Override
    public Field<String> field2() {
        return PriceCategories.PRICE_CATEGORIES.CATEGORY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return PriceCategories.PRICE_CATEGORIES.CREATED_DATE;
    }

    @Override
    public Field<Boolean> field4() {
        return PriceCategories.PRICE_CATEGORIES.IS_ACTIVE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCategory();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedDate();
    }

    @Override
    public Boolean component4() {
        return getIsActive();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCategory();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedDate();
    }

    @Override
    public Boolean value4() {
        return getIsActive();
    }

    @Override
    public PriceCategoriesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PriceCategoriesRecord value2(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public PriceCategoriesRecord value3(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public PriceCategoriesRecord value4(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public PriceCategoriesRecord values(Long value1, String value2, LocalDateTime value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PriceCategoriesRecord
     */
    public PriceCategoriesRecord() {
        super(PriceCategories.PRICE_CATEGORIES);
    }

    /**
     * Create a detached, initialised PriceCategoriesRecord
     */
    public PriceCategoriesRecord(Long id, String category, LocalDateTime createdDate, Boolean isActive) {
        super(PriceCategories.PRICE_CATEGORIES);

        set(0, id);
        set(1, category);
        set(2, createdDate);
        set(3, isActive);
    }
}
