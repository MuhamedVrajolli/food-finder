/*
 * This file is generated by jOOQ.
 */
package foodfinder.jooq.tables.records;


import foodfinder.jooq.tables.Foods;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FoodsRecord extends UpdatableRecordImpl<FoodsRecord> implements Record7<Long, String, Integer, Long, Boolean, LocalDateTime, Boolean> {

    private static final long serialVersionUID = -238272242;

    /**
     * Setter for <code>public.foods.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.foods.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.foods.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.foods.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.foods.preparation_time</code>.
     */
    public void setPreparationTime(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.foods.preparation_time</code>.
     */
    public Integer getPreparationTime() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.foods.price_category</code>.
     */
    public void setPriceCategory(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.foods.price_category</code>.
     */
    public Long getPriceCategory() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.foods.is_dessert</code>.
     */
    public void setIsDessert(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.foods.is_dessert</code>.
     */
    public Boolean getIsDessert() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.foods.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.foods.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.foods.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.foods.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Integer, Long, Boolean, LocalDateTime, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Integer, Long, Boolean, LocalDateTime, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Foods.FOODS.ID;
    }

    @Override
    public Field<String> field2() {
        return Foods.FOODS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Foods.FOODS.PREPARATION_TIME;
    }

    @Override
    public Field<Long> field4() {
        return Foods.FOODS.PRICE_CATEGORY;
    }

    @Override
    public Field<Boolean> field5() {
        return Foods.FOODS.IS_DESSERT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Foods.FOODS.CREATED_DATE;
    }

    @Override
    public Field<Boolean> field7() {
        return Foods.FOODS.IS_ACTIVE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getPreparationTime();
    }

    @Override
    public Long component4() {
        return getPriceCategory();
    }

    @Override
    public Boolean component5() {
        return getIsDessert();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedDate();
    }

    @Override
    public Boolean component7() {
        return getIsActive();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getPreparationTime();
    }

    @Override
    public Long value4() {
        return getPriceCategory();
    }

    @Override
    public Boolean value5() {
        return getIsDessert();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedDate();
    }

    @Override
    public Boolean value7() {
        return getIsActive();
    }

    @Override
    public FoodsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FoodsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FoodsRecord value3(Integer value) {
        setPreparationTime(value);
        return this;
    }

    @Override
    public FoodsRecord value4(Long value) {
        setPriceCategory(value);
        return this;
    }

    @Override
    public FoodsRecord value5(Boolean value) {
        setIsDessert(value);
        return this;
    }

    @Override
    public FoodsRecord value6(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public FoodsRecord value7(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public FoodsRecord values(Long value1, String value2, Integer value3, Long value4, Boolean value5, LocalDateTime value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FoodsRecord
     */
    public FoodsRecord() {
        super(Foods.FOODS);
    }

    /**
     * Create a detached, initialised FoodsRecord
     */
    public FoodsRecord(Long id, String name, Integer preparationTime, Long priceCategory, Boolean isDessert, LocalDateTime createdDate, Boolean isActive) {
        super(Foods.FOODS);

        set(0, id);
        set(1, name);
        set(2, preparationTime);
        set(3, priceCategory);
        set(4, isDessert);
        set(5, createdDate);
        set(6, isActive);
    }
}
